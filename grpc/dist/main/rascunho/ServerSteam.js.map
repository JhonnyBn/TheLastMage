{"version":3,"sources":["../../../src/main/rascunho/ServerSteam.js"],"names":["server","grpc","Server","SERVER_ADDRESS","PROTO_PATH","__dirname","proto","loadPackageDefinition","protoLoader","loadSync","keepCase","longs","String","enums","defaults","oneofs","users","join","call","callback","console","log","push","notifyChat","user","text","send","request","message","forEach","write","addService","example","Chat","service","bind","ServerCredentials","createInsecure","start"],"mappings":";;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,IAAI,CAACC,MAAT,EAAf;AACA,IAAMC,cAAc,GAAG,cAAvB;AACA,IAAMC,UAAU,GAAGC,SAAS,GAAG,4BAA/B,C,CAEA;;AACA,IAAIC,KAAK,GAAGL,IAAI,CAACM,qBAAL,CACRC,WAAW,CAACC,QAAZ,CAAqBL,UAArB,EAAiC;AAC7BM,EAAAA,QAAQ,EAAE,IADmB;AAE7BC,EAAAA,KAAK,EAAEC,MAFsB;AAG7BC,EAAAA,KAAK,EAAED,MAHsB;AAI7BE,EAAAA,QAAQ,EAAE,IAJmB;AAK7BC,EAAAA,MAAM,EAAE;AALqB,CAAjC,CADQ,CAAZ;AAUA,IAAIC,KAAK,GAAG,EAAZ,C,CAEA;;AACA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,QAApB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,EAAAA,KAAK,CAACM,IAAN,CAAWJ,IAAX;AACAK,EAAAA,UAAU,CAAC;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAD,CAAV;AACH,C,CAED;;;AACA,SAASC,IAAT,CAAcR,IAAd,EAAoBC,QAApB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAK,EAAAA,UAAU,CAACL,IAAI,CAACS,OAAN,CAAV;AACH,C,CAED;;;AACA,SAASJ,UAAT,CAAoBK,OAApB,EAA6B;AACzBZ,EAAAA,KAAK,CAACa,OAAN,CAAc,UAAAL,IAAI,EAAI;AAClBA,IAAAA,IAAI,CAACM,KAAL,CAAWF,OAAX;AACH,GAFD;AAGH,C,CAED;;;AACA5B,MAAM,CAAC+B,UAAP,CAAkBzB,KAAK,CAAC0B,OAAN,CAAcC,IAAd,CAAmBC,OAArC,EAA8C;AAAEjB,EAAAA,IAAI,EAAEA,IAAR;AAAcS,EAAAA,IAAI,EAAEA;AAApB,CAA9C;AAEA1B,MAAM,CAACmC,IAAP,CAAYhC,cAAZ,EAA4BF,IAAI,CAACmC,iBAAL,CAAuBC,cAAvB,EAA5B;AAEArC,MAAM,CAACsC,KAAP","sourcesContent":["import * as protoLoader from '@grpc/proto-loader';\r\nimport * as grpc from 'grpc';\r\n\r\nconst server = new grpc.Server();\r\nconst SERVER_ADDRESS = \"0.0.0.0:5001\";\r\nconst PROTO_PATH = __dirname + '../../../protos/chat.proto';\r\n\r\n// Load protobuf\r\nlet proto = grpc.loadPackageDefinition(\r\n    protoLoader.loadSync(PROTO_PATH, {\r\n        keepCase: true,\r\n        longs: String,\r\n        enums: String,\r\n        defaults: true,\r\n        oneofs: true\r\n    })\r\n);\r\n\r\nlet users = [];\r\n\r\n// Receive message from client joining\r\nfunction join(call, callback) {\r\n    console.log(call)\r\n    users.push(call);\r\n    notifyChat({ user: \"Server\", text: \"new user joined ...\" });\r\n}\r\n\r\n// Receive message from client\r\nfunction send(call, callback) {\r\n    console.log(call)\r\n    notifyChat(call.request);\r\n}\r\n\r\n// Send message to all connected clients\r\nfunction notifyChat(message) {\r\n    users.forEach(user => {\r\n        user.write(message);\r\n    });\r\n}\r\n\r\n// Define server with the methods and start it\r\nserver.addService(proto.example.Chat.service, { join: join, send: send });\r\n\r\nserver.bind(SERVER_ADDRESS, grpc.ServerCredentials.createInsecure());\r\n\r\nserver.start();"],"file":"ServerSteam.js"}