{"version":3,"sources":["../../../src/main/server/datasource.js"],"names":["msgs","Array","saveMsg","msg","push","fs","writeFile","JSON","stringify","err","console","log","loadMsgs","game","Promise","resolve","readFile","fileData","msgsLoaded","parse","forEach","data","processInput","deleteDatasource"],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,KAAJ,EAAb;;AAEO,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACzBH,EAAAA,IAAI,CAACI,IAAL,CAAU;AAAED,IAAAA,GAAG,EAAHA;AAAF,GAAV;;AACAE,iBAAGC,SAAH,CAAa,iBAAb,EAAgCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAhC,EAAsD,UAAAS,GAAG,EAAI;AACzD,QAAIA,GAAJ,EAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,GAND;AAOH;;AAEM,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAE1BV,mBAAGW,QAAH,CAAY,iBAAZ,EAA+B,UAACP,GAAD,EAAMQ,QAAN,EAAmB;AAC9C,UAAIR,GAAJ,EAAS;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAM,QAAAA,OAAO,CAACf,IAAD,CAAP;AACA;AACH;;AACD,UAAMkB,UAAU,GAAGX,IAAI,CAACY,KAAL,CAAWF,QAAX,CAAnB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ;AACAA,MAAAA,UAAU,CAACE,OAAX,CAAmB,UAAAC,IAAI,EAAI;AACvBR,QAAAA,IAAI,CAACS,YAAL,CAAkBD,IAAI,CAAClB,GAAvB;AACAH,QAAAA,IAAI,CAACI,IAAL,CAAUiB,IAAV;AACH,OAHD;AAIAN,MAAAA,OAAO,CAACf,IAAD,CAAP;AACH,KAbD;AAeH,GAjBM,CAAP;AAkBH;;AAEM,SAASuB,gBAAT,GAA2B;AAC9BlB,iBAAGC,SAAH,CAAa,iBAAb,EAAgC,IAAhC,EAAsC,UAAAG,GAAG,EAAI;AACzC,QAAIA,GAAJ,EAAS;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH;AACJ,GAND;AAOH","sourcesContent":["import fs from \"fs\";\r\n\r\nconst msgs = new Array()\r\n\r\nexport function saveMsg(msg) {\r\n    msgs.push({ msg })\r\n    fs.writeFile('./database.json', JSON.stringify(msgs), err => {\r\n        if (err) {\r\n            console.log('Error writing file', err)\r\n        } else {\r\n            console.log('Successfully wrote file')\r\n        }\r\n    })\r\n}\r\n\r\nexport function loadMsgs(game) {\r\n    return new Promise(resolve => {\r\n\r\n        fs.readFile('./database.json', (err, fileData) => {\r\n            if (err) {\r\n                console.log('Error reading file', err)\r\n                resolve(msgs)\r\n                return;\r\n            }\r\n            const msgsLoaded = JSON.parse(fileData)\r\n            console.log(msgsLoaded)\r\n            msgsLoaded.forEach(data => {\r\n                game.processInput(data.msg)\r\n                msgs.push(data)\r\n            })\r\n            resolve(msgs)\r\n        })\r\n\r\n    })\r\n}\r\n\r\nexport function deleteDatasource(){\r\n    fs.writeFile('./database.json', \"[]\", err => {\r\n        if (err) {\r\n            console.log('Error writing file', err)\r\n        } else {\r\n            console.log('Successfully wrote file')\r\n        }\r\n    })\r\n}"],"file":"datasource.js"}